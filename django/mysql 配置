Django 配置MySQL数据库

在settings.py中配置

DATABASES = { 'default': { 'ENGINE': 'django.db.backends.mysql', # 数据库引擎 'NAME': 'mydb', # 你要存储数据的库名，事先要创建之 'USER': 'root', # 数据库用户名 'PASSWORD': '1234', # 密码 'HOST': 'localhost', # 主机 'PORT': '3306', # 数据库使用的端口 } } 

Python3不支持MySQLdb，可用pymysql代替。

1.首先，在Python虚拟环境下安装pymysql：pip install pymysql。

2.然后，在项目文件夹下的_init_.py添加如下代码即可。

import pymysql pymysql.install_as_MySQLdb() 

Python安装路劲下的Python36-32\Lib\site-packages\django\db\backends\mysql\base.py文件下注释下面语句

1 if version < (1, 3, 3): 2 raise ImproperlyConfigured("mysqlclient 1.3.3 or newer is required; you have %s" % Database.__version__) 

File "C:\Python\Python37\lib\site-packages\django\db\backends\mysql\operations.py", line 146行注释掉

# if query is not None: #query = query.decode(errors=‘replace’) python manage.py makemigrations python manage.py migrate

############################################

#启动MySQL服务
[root@budong tools]# service mysqld start  

#登陆
[root@budong tools]# mysql -u root -p

#修改 root 密码
mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'qwe123';

#退出
mysql> \q

#修改配置文件
[root@budong tools]# vim /etc/my.cnf
[mysqld]

datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
character_set_server = utf8

symbolic-links=0

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

[client]
default-character-set=utf8
socket=/var/lib/mysql/mysql.sock

[mysql]
default-character-set = utf8

#重启服务
[root@budong tools]# service mysqld restart

#清理安装
[root@budong tools]# mysql_secure_installation
此时输入 root 密码，接下来，为了安全，MySQL 会提示你密码为级别，重置 root 密码，移除其他用户账号，禁用 root 远程登录，移除 test 数据库，重新加载 privilege 表格等，你只需输入 y 继续执行即可。如果root密码改啦的话就是输no，其他的地方一直y就可以啦。至此，整个 MySQL 安装完成。
#Press y|Y for Yes, any other key for No: y  确定后面的密码级别
#Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 0 最小级别，如果是后面的级别的话，以后新建用户的时候设置密码必须要满足选定的级别
#Change the password for root ? ((Press y|Y for Yes, any other key for No) : n 是不是改root密码，我这里就不改啦
#接下来全部都是y


#设置开机启动
[root@budong tools]# chkconfig --levels 235 mysqld on

#再次登陆MySQL
[root@budong tools]# mysql -u root -p

#查看字符集
mysql> SHOW VARIABLES LIKE 'character%';

#创建管理员用户 因为root用户限制不能远程登陆
mysql> CREATE USER 'admin'@'%' IDENTIFIED BY 'rootqwe123';

#给这个用户授予所有的远程访问的权限。这个用户主要用于管理整个数据库、备份、还原等操作。
mysql> GRANT ALL  ON *.* TO 'admin'@'%';

#使更改立即生效
mysql> FLUSH PRIVILEGES;

#创建普通用户
mysql> CREATE USER 'develop'@'%' IDENTIFIED BY 'QWEqwe123';  #这里的%代表可以远程登陆

#给这个用户授予 SELECT,INSERT,UPDATE,DELETE 的远程访问的权限，这个账号一般用于提供给实施的系统访问
mysql> GRANT SELECT,INSERT,UPDATE,DELETE  ON *.* TO 'develop'@'%';

#使更改立即生效
mysql> FLUSH PRIVILEGES;

#退出
mysql> \q

#以上就是在centos6.9上用rpm安装MySQL5.7.19的方法，注意这个方法适用5.7.5之后的版本
```

`rpm`总结

```shell
rpm -qa  |grep mysql  #查看已安装的某个软件
rpm -e mysql-...  #删除某个安装包
rpm -ivh mysql...  #安装某个安装包

#选项
-a 显示安装的所有软件列表
-e 从系统中移除指定的软件包
-h 安装软件时输出hash记号：#
-i 安装软件时显示软件包的相关信息
-l 显示软件包中的列表
-v 安装软件时显示命令的执行过程
-q 使用询问模式，当遇到任何问题时，rpm指令会先询问用户
-p 查询软件包的文件
```

这个再给大家用yum安装MySQL的方法，大家参考一下，但是yum安装的版本比较低。

```shell
linux上的mysqld的yum安装，yum安装的是MySQL5.1的版本，参考一下

#查看已经安装的mysql文件
rpm -qa | grep mysql

#查看可以按的RPM包
yum list | grep ^mysql

#安装mysql开发包及mysql服务端
sudo yum install mysql-devel mysql-server

#启动mysql：
sudo service mysqld start
#会出现非常多的信息，目的是对mysql数据库进行初始化操作

#查看mysql服务是否开机自启动
chkconfig --list | grep mysqld

#如果没有启动，可以通过下面语句来启动：
sudo chkconfig mysqld on

#通过命令给root账号设置密码为root
#(注意：这个root账号是mysql的root账号，非Linux的root账号)
mysqladmin -u root password 'root'

#通过 mysql -u root -p 命令来登录我们的mysql数据库了

#进入mysql,查看编码集
SHOW VARIABLES LIKE '%char%';

#查看校对集
SHOW VARIABLES LIKE '%colla%';

#改配置文件：
#查看服务的状态
service mysqld status
#关闭服务
sudo service mysqld stop

#进入文件
sudo vi /etc/my.cnf

# 往里面加进进去的内容
# 服务端
[mysqld]
character-set-server=utf8
collation-server=utf8_general_ci

# 客户端：
[client]
default-character-set=utf8

#重启服务
sudo service mysqld restart
```
